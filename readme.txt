Версія: 1.1

    Створи репозиторій goit-markup-hw-07.
    Склонуй створений репозиторій і скопіюй в нього файли попередньої роботи.
    Виконай верстку адаптивної версії всіх елементів головної сторінки домашнього завдання #7.
    Налаштуй GitHub Pages і додай посилання на живу сторінку в шапку GitHub-репозиторія.

Критерії приймання роботи наставником

Для здачі домашнього завдання достатньо зробити адаптивну верстку головної сторінки (index.html). Виконання адаптивної верстки сторінки портфорліо (portfolio.html) не обов'язкове для здачі домашнього завдання.
Проект

«A1» При перегляді сторінки на будь-якому пристрої шириною від 320px, не з'являється горизонтальна смуга прокручування.

«A2» Скрипт мобільного меню підключений в HTML окремим файлом mobile-menu.js.
Скрипт мобільного меню

Повний приклад створення мобільного меню з уже написаним скриптом розбери у майстерні.
Розмітка

«B1» У всіх сторінок в блоці <head> є метатег viewport.

«B2» Всі фонові і контентні растрові зображення - респонсивні і підтримують екрани щільністю x1 і x2.

«B3» Для респонсивних фонових зображень використані медіа-функціі min-device-pixel-ratio і min-resolution.

«B4» Виконана розмітка мобільного меню.
Оформлення

«C1» При написанні стилів використаний Mobile First підхід і медіа-функція (min-width: ).

«C2» Стилі, необхідні тільки у певному проміжку, закриті в медіа-запити (min-width: ) and (max-width: ) або тільки (max-width: ).

«C3» В медіа-запитах відсутнє зайве дублювання стилів.

«C4» Верстка виконана щодо трьох точок перелому: 428px, 768px і 1158px.

«C5» Виконано оформлення мобільного меню.







Привіт) залишився лише один ривок до проекту. Ця ваша фінальна робота. І найімовірніше вона піде до вас у резюме/портфоліо.
Завдання виконано згідно з ТЗ
Основним джерелом необхідної інформації для виконання ДЗ – конспект, відеоуроки в записі та живі вебінари з викладачем.
Адаптивна верстка – це сучасний стандарт. Верстаючи сайт, лендінг або обкладинку розробник знає, що адаптивність буде за замовчуванням. Це дуже важлива тема, якій слід приділити час.
Поняття роботи медіазапитів важливий момент -- це набір правил, які дозволяють створювати веб-сайти, використовуючи різні стилі для різних пристроїв або типів носіїв.
Поруч по важливості з адаптивністю самого сайту стоять і адаптивні картинки - зображення, які добре відображаються на пристроях з різними розмірами та роздільною здатністю екрану.
Додаткові матеріали:
Responsive images - https://developer.mozilla.org/en-US/docs/Learn/HTML/Multimedia_and_embedding/Responsive_images
Адаптивне модальне вікно https://codepen.io/NatalieValikova/pen/jRKazQ
Докладіть максимум зусиль, щоб вона вийшла просто супер. Подивіться по-іншому на макет. У нас принцип mobile first, але розмітку ми робимо вже фінальну, тобто розмітка відразу буде така, як на десктопі. Це стилями ми все правимо і “підганяємо“.
CSS властивості повинні писатися осмислено -- для блокових елементів за замовчуванням немає необхідності повторно писати display: block -- не треба зі старту розкривати карти та показувати, що ви новачок.
Правильне та технічно грамотне позиціонування – це запорука успіху. У тому числі й співбесіди.
Дотримуйтесь структури. Розкладайте по поличках. Це зручно та зрозуміло.
Просто закріпіть пройдений матеріал. Даю гарантію, що швидше за все у вас буде відрізнятися та верстка та підхід, який ви вивчили під фінал. У вас зміниться погляд на макет і процес у цілому.
Також прошу звернути увагу на моб меню. Не забуваймо, що меню у нас є до планшета і має займати весь простір екрану як по висоті, так і по ширині.
Також звертаю вашу увагу, що жорстко фіксувати відступи між блоками не потрібно, тому що ми не знаємо висоту екрану користувача.
Дуже важливо, оскільки ще є користувачі з шириною екрана 320, то ваші сторінки та елементи (модалка теж) мають бути симетричні і на ширині в’юпорта 320.
Приклад, як мають вигладати стилі для контейнера
.container {
  max-width: 428px;
  padding-left: 15px;
  padding-right: 15px;
  margin-left: auto;
  margin-right: auto;
}
@media screen and (min-width: 768px) {
  .container {
    max-width: 768px;
  }
}
@media screen and (min-width: 1200px) {
  .container {
    max-width: 1158px;
  }
}
Давайте трохи натиснемо і все вийде:мышцы:
developer.mozilla.orgdeveloper.mozilla.org
Responsive images - Learn web development | MDN
That's a wrap for responsive images — we hope you enjoyed playing with these new techniques. As a recap, there are two distinct problems we've been discussing here: (24 КБ)
https://developer.mozilla.org/en-US/docs/Learn/HTML/Multimedia_and_embedding/Responsive_images

CodePenCodePen
Адаптивное модальное окно
... (4 КБ)
https://codepen.io/NatalieValikova/pen/jRKazQ

:+1:
2




Привіт) залишився лише один ривок до проекту. Ця ваша фінальна робота. І найімовірніше вона піде до вас у резюме/портфоліо.
Завдання виконано згідно з ТЗ
Основним джерелом необхідної інформації для виконання ДЗ – конспект, відеоуроки в записі та живі вебінари з викладачем.
Адаптивна верстка – це сучасний стандарт. Верстаючи сайт, лендінг або обкладинку розробник знає, що адаптивність буде за замовчуванням. Це дуже важлива тема, якій слід приділити час.
Поняття роботи медіазапитів важливий момент -- це набір правил, які дозволяють створювати веб-сайти, використовуючи різні стилі для різних пристроїв або типів носіїв.
Поруч по важливості з адаптивністю самого сайту стоять і адаптивні картинки - зображення, які добре відображаються на пристроях з різними розмірами та роздільною здатністю екрану.
Додаткові матеріали:
Responsive images - https://developer.mozilla.org/en-US/docs/Learn/HTML/Multimedia_and_embedding/Responsive_images
Адаптивне модальне вікно https://codepen.io/NatalieValikova/pen/jRKazQ
Докладіть максимум зусиль, щоб вона вийшла просто супер. Подивіться по-іншому на макет. У нас принцип mobile first, але розмітку ми робимо вже фінальну, тобто розмітка відразу буде така, як на десктопі. Це стилями ми все правимо і “підганяємо“.
CSS властивості повинні писатися осмислено -- для блокових елементів за замовчуванням немає необхідності повторно писати display: block -- не треба зі старту розкривати карти та показувати, що ви новачок.
Правильне та технічно грамотне позиціонування – це запорука успіху. У тому числі й співбесіди.
Дотримуйтесь структури. Розкладайте по поличках. Це зручно та зрозуміло.
Просто закріпіть пройдений матеріал. Даю гарантію, що швидше за все у вас буде відрізнятися та верстка та підхід, який ви вивчили під фінал. У вас зміниться погляд на макет і процес у цілому.
Також прошу звернути увагу на моб меню. Не забуваймо, що меню у нас є до планшета і має займати весь простір екрану як по висоті, так і по ширині.
Також звертаю вашу увагу, що жорстко фіксувати відступи між блоками не потрібно, тому що ми не знаємо висоту екрану користувача.
Дуже важливо, оскільки ще є користувачі з шириною екрана 320, то ваші сторінки та елементи (модалка теж) мають бути симетричні і на ширині в’юпорта 320.
Приклад, як мають вигладати стилі для контейнера
.container {
  max-width: 428px;
  padding-left: 15px;
  padding-right: 15px;
  margin-left: auto;
  margin-right: auto;
}
@media screen and (min-width: 768px) {
  .container {
    max-width: 768px;
  }
}
@media screen and (min-width: 1200px) {
  .container {
    max-width: 1158px;
  }
}
Давайте трохи натиснемо і все вийде:мышцы:
developer.mozilla.orgdeveloper.mozilla.org
Responsive images - Learn web development | MDN
That's a wrap for responsive images — we hope you enjoyed playing with these new techniques. As a recap, there are two distinct problems we've been discussing here: (24 КБ)
https://developer.mozilla.org/en-US/docs/Learn/HTML/Multimedia_and_embedding/Responsive_images

CodePenCodePen
Адаптивное модальное окно
... (4 КБ)
https://codepen.io/NatalieValikova/pen/jRKazQ

:+1:
3
:звезда2:
1
:плач:
1

